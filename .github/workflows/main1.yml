name: Build & Publish

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches: [ "brosena" ]
  
env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.steamos.cloud/steamrt/sniper/sdk:latest

    steps:
      - name: Prepare env
        shell: bash
        run: echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Setup protobuf
        shell: bash
        run: sudo apt-get update && sudo apt install -y protobuf-compiler

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - run: dotnet publish -c Release managed/CounterStrikeSharp.API

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - name: Clean build directory
        run: |
          mkdir build/output/
          mv build/addons build/output
      - name: Add API to Artifacts
        run: |
          mkdir -p build/output/addons/counterstrikesharp/api
          mkdir -p build/output/addons/counterstrikesharp/plugins
          cp -r managed/CounterStrikeSharp.API/bin/Release/net7.0/publish/* build/output/addons/counterstrikesharp/api
      - uses: actions/upload-artifact@v3
        with:
          name: counterstrikesharp-${{ env.GITHUB_SHA_SHORT }}
          path: build/output/

      - name: Add dotnet runtime
        run: |
          mkdir -p build/output/addons/counterstrikesharp/dotnet
          curl -s -L https://download.visualstudio.microsoft.com/download/pr/dc2c0a53-85a8-4fda-a283-fa28adb5fbe2/8ccade5bc400a5bb40cd9240f003b45c/aspnetcore-runtime-7.0.11-linux-x64.tar.gz \
          | tar xvz -C build/output/addons/counterstrikesharp/dotnet
          mv build/output/addons/counterstrikesharp/dotnet/shared/Microsoft.NETCore.App/7.0.11/* build/output/addons/counterstrikesharp/dotnet/shared/Microsoft.NETCore.App/
      - uses: actions/upload-artifact@v3
        with:
          name: counterstrikesharp-with-runtime-${{ env.GITHUB_SHA_SHORT }}
          path: build/output/
